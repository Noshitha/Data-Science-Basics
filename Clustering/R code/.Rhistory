Uni <- read.csv(file.choose())
View(Uni)
normalized_data<-scale(Uni[,2:7])
View(Uni)
normalized_data
?dist
Crime <- read.csv(file.choose())
View(Crime)
normalized_data<-scale(Uni[,2:7])
normalized_data
# Normalizing continuous columns to bring them under same scale
plot(Uni)
# Normalizing continuous columns to bring them under same scale
plot(Uni$SAT)
?dist
d <- dist(normalized_data, method = "euclidean")
d
?hclust
fit <- hclust(d, method="complete")
fit
d2 <- dist(normalized_data , method = "manhattan")
d2
plot(Uni)
normalized_data
plot(Uni$SAT)
d <- dist(normalized_data, method = "euclidean")
d
fit <- hclust(d, method="complete")
fit
plot(fit)
fit2 <- hclust(d,method = "single")
plot(fit2)
plot(fit)
plot(fit2)
plot(fit)
plot(fit, hang=-1)
?cutree
plot(fit)
rect.hclust(fit, k=3, border="red")
groups <- cutree(fit, k=3)
rect.hclust(fit, k=5, border="red"
rect.hclust(fit, k=5, border="red")
rect.hclust(fit, k=5, border="red")
rect.hclust(fit, k=4, border="red")
rect.hclust(fit, k=5, border="red")
rect.hclust(fit, k=4, border="red")
plot(fit)
rect.hclust(fit, k=3, border="red")
groups <- cutree(fit, k=3)
membership<-as.matrix(groups)
# groups or cluster numbers
final <- data.frame(Uni, membership)
View(final)
write.csv(final, file="final.csv",row.names = F)
aggregate(Uni[,-1],by=list(final$membership),mean)
plot(fit)
Uni <- read.csv(file.choose())
View(Uni)
plot(Uni$SAT)
normalized_data<-scale(Uni[,2:7]) #excluding the university name columnbefore normalizing
normalized_data
normalized_data
#distance matrix
d <- dist(normalized_data, method = "euclidean")
d2 <- dist(normalized_data , method = "manhattan")
d
d2
#Hierarchical Clusturing
fit <- hclust(d, method="complete")
fit2 <- hclust(d,method = "single")
fit
?hclust
plot(fit2)
plot(fit)# display dendrogram
plot(fit, hang=-1)
